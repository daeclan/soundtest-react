{"ast":null,"code":"import { DataTexture, FloatType, MathUtils, RGBFormat, ShaderMaterial, UniformsUtils } from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js';\n\nvar GlitchPass = function GlitchPass(dt_size) {\n  Pass.call(this);\n  if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on DigitalGlitch');\n  var shader = DigitalGlitch;\n  this.uniforms = UniformsUtils.clone(shader.uniforms);\n  if (dt_size == undefined) dt_size = 64;\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n  this.fsQuad = new Pass.FullScreenQuad(this.material);\n  this.goWild = false;\n  this.curF = 0;\n  this.generateTrigger();\n};\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random(); //default seeding\n\n    this.uniforms['byp'].value = 0;\n\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms['amount'].value = Math.random() / 30;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms['amount'].value = Math.random() / 90;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-0.3, 0.3);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms['byp'].value = 1;\n    }\n\n    this.curF++;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  },\n  generateTrigger: function generateTrigger() {\n    this.randX = MathUtils.randInt(120, 240);\n  },\n  generateHeightmap: function generateHeightmap(dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3);\n    var length = dt_size * dt_size;\n\n    for (var i = 0; i < length; i++) {\n      var val = MathUtils.randFloat(0, 1);\n      data_arr[i * 3 + 0] = val;\n      data_arr[i * 3 + 1] = val;\n      data_arr[i * 3 + 2] = val;\n    }\n\n    return new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType);\n  }\n});\nexport { GlitchPass };","map":{"version":3,"sources":["/Users/yungdae/Documents/Actualize/soundtest-react/node_modules/three/examples/jsm/postprocessing/GlitchPass.js"],"names":["DataTexture","FloatType","MathUtils","RGBFormat","ShaderMaterial","UniformsUtils","Pass","DigitalGlitch","GlitchPass","dt_size","call","undefined","console","error","shader","uniforms","clone","value","generateHeightmap","material","vertexShader","fragmentShader","fsQuad","FullScreenQuad","goWild","curF","generateTrigger","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","texture","Math","random","randX","randFloat","PI","renderToScreen","setRenderTarget","clear","randInt","data_arr","Float32Array","length","i","val"],"mappings":"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","sourcesContent":["import {\n\tDataTexture,\n\tFloatType,\n\tMathUtils,\n\tRGBFormat,\n\tShaderMaterial,\n\tUniformsUtils\n} from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js';\n\nvar GlitchPass = function (dt_size) {\n\n\tPass.call(this);\n\n\tif (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on DigitalGlitch');\n\n\tvar shader = DigitalGlitch;\n\tthis.uniforms = UniformsUtils.clone(shader.uniforms);\n\n\tif (dt_size == undefined) dt_size = 64;\n\n\n\tthis.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n\n\n\tthis.material = new ShaderMaterial({\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\t});\n\n\tthis.fsQuad = new Pass.FullScreenQuad(this.material);\n\n\tthis.goWild = false;\n\tthis.curF = 0;\n\tthis.generateTrigger();\n\n};\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n\n\tconstructor: GlitchPass,\n\n\trender: function (renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n\n\t\tthis.uniforms['tDiffuse'].value = readBuffer.texture;\n\t\tthis.uniforms['seed'].value = Math.random();//default seeding\n\t\tthis.uniforms['byp'].value = 0;\n\n\t\tif (this.curF % this.randX == 0 || this.goWild == true) {\n\n\t\t\tthis.uniforms['amount'].value = Math.random() / 30;\n\t\t\tthis.uniforms['angle'].value = MathUtils.randFloat(- Math.PI, Math.PI);\n\t\t\tthis.uniforms['seed_x'].value = MathUtils.randFloat(- 1, 1);\n\t\t\tthis.uniforms['seed_y'].value = MathUtils.randFloat(- 1, 1);\n\t\t\tthis.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n\t\t\tthis.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n\t\t\tthis.curF = 0;\n\t\t\tthis.generateTrigger();\n\n\t\t} else if (this.curF % this.randX < this.randX / 5) {\n\n\t\t\tthis.uniforms['amount'].value = Math.random() / 90;\n\t\t\tthis.uniforms['angle'].value = MathUtils.randFloat(- Math.PI, Math.PI);\n\t\t\tthis.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n\t\t\tthis.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n\t\t\tthis.uniforms['seed_x'].value = MathUtils.randFloat(- 0.3, 0.3);\n\t\t\tthis.uniforms['seed_y'].value = MathUtils.randFloat(- 0.3, 0.3);\n\n\t\t} else if (this.goWild == false) {\n\n\t\t\tthis.uniforms['byp'].value = 1;\n\n\t\t}\n\n\t\tthis.curF++;\n\n\t\tif (this.renderToScreen) {\n\n\t\t\trenderer.setRenderTarget(null);\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget(writeBuffer);\n\t\t\tif (this.clear) renderer.clear();\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t}\n\n\t},\n\n\tgenerateTrigger: function () {\n\n\t\tthis.randX = MathUtils.randInt(120, 240);\n\n\t},\n\n\tgenerateHeightmap: function (dt_size) {\n\n\t\tvar data_arr = new Float32Array(dt_size * dt_size * 3);\n\t\tvar length = dt_size * dt_size;\n\n\t\tfor (var i = 0; i < length; i++) {\n\n\t\t\tvar val = MathUtils.randFloat(0, 1);\n\t\t\tdata_arr[i * 3 + 0] = val;\n\t\t\tdata_arr[i * 3 + 1] = val;\n\t\t\tdata_arr[i * 3 + 2] = val;\n\n\t\t}\n\n\t\treturn new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType);\n\n\t}\n\n});\n\nexport { GlitchPass };\n"]},"metadata":{},"sourceType":"module"}