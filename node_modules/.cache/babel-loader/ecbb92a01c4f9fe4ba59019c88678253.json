{"ast":null,"code":"var _jsxFileName = \"/Users/yungdae/Documents/Actualize/soundtest-react/src/App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, Suspense } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { OrbitControls, useGLTF } from \"drei\";\nimport { Box } from \"@react-three/drei/shapes\";\nimport \"./styles.css\";\nimport { MeshStandardMaterial } from \"three\"; // const Scene = () => {\n//   const scene = useRef();\n//   useFrame(() => {\n//     scene.current.rotation.y += 0.04;\n//     scene.current.rotation.x += 0.04;\n//     scene.current.rotation.z += 0.04;\n//   });\n//   return (\n//     <group ref={scene}>\n//       <Box>\n//         <meshLambertMaterial attach=\"material\" color=\"white\" />\n//       </Box>\n//     </group>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Floor = function Floor() {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [-2, -2, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n      args: [100, 100, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Floor;\n\nvar TV = function TV() {\n  _s();\n\n  var _useGLTF = useGLTF('tv.gltf'),\n      nodes = _useGLTF.nodes;\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    rotation: [Math.PI / 8, Math.PI * 1.2, 0],\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.TV.geometry,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TV, \"5D6rOZ9bvUtw5+qsW9KW4TPIfKU=\", false, function () {\n  return [useGLTF];\n});\n\n_c2 = TV;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"fog\", {\n      attach: \"fog\",\n      args: [\"black\", 1, 7]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      maxPolarAngle: Math.PI / 2,\n      minPolarAngle: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: /*#__PURE__*/_jsxDEV(TV, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Floor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Floor\");\n$RefreshReg$(_c2, \"TV\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/yungdae/Documents/Actualize/soundtest-react/src/App.js"],"names":["React","useRef","Suspense","Canvas","useFrame","OrbitControls","useGLTF","Box","MeshStandardMaterial","Floor","Math","PI","TV","nodes","geometry","App"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,mBAAjC;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,MAAvC;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAO,cAAP;AACA,SAASC,oBAAT,QAAqC,OAArC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,sBACE;AAAM,IAAA,QAAQ,EAAE,CAAC,CAACC,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAhB;AAAsC,IAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,CAAhD;AAAA,4BACE;AAAqB,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX;AAA3B;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAsB,MAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAPD;;KAAMF,K;;AASN,IAAMG,EAAE,GAAG,SAALA,EAAK,GAAM;AAAA;;AAAA,iBACGN,OAAO,CAAC,SAAD,CADV;AAAA,MACPO,KADO,YACPA,KADO;;AAEf,sBACE;AAAO,IAAA,QAAQ,EAAE,CAACH,IAAI,CAACC,EAAL,GAAU,CAAX,EAAcD,IAAI,CAACC,EAAL,GAAU,GAAxB,EAA6B,CAA7B,CAAjB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEE,KAAK,CAACD,EAAN,CAASE,QAAzB;AAAA,6BACE;AAAsB,QAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CATD;;GAAMF,E;UACcN,O;;;MADdM,E;AAWN,eAAe,SAASG,GAAT,GAAe;AAC5B,sBACE,QAAC,MAAD;AAAA,4BACE;AAAK,MAAA,MAAM,EAAC,KAAZ;AAAkB,MAAA,IAAI,EAAE,CAAC,OAAD,EAAU,CAAV,EAAa,CAAb;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,aAAa,EAAEL,IAAI,CAACC,EAAL,GAAU,CAAxC;AAA2C,MAAA,aAAa,EAAE;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAkB,MAAA,SAAS,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,IAApB;AAAA,6BACE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;MAZuBI,G","sourcesContent":["import React, { useRef, Suspense } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { OrbitControls, useGLTF } from \"drei\";\nimport { Box } from \"@react-three/drei/shapes\";\nimport \"./styles.css\";\nimport { MeshStandardMaterial } from \"three\";\n\n// const Scene = () => {\n//   const scene = useRef();\n//   useFrame(() => {\n//     scene.current.rotation.y += 0.04;\n//     scene.current.rotation.x += 0.04;\n//     scene.current.rotation.z += 0.04;\n//   });\n//   return (\n//     <group ref={scene}>\n//       <Box>\n//         <meshLambertMaterial attach=\"material\" color=\"white\" />\n//       </Box>\n//     </group>\n//   );\n// };\n\nconst Floor = () => {\n  return (\n    <mesh rotation={[-Math.PI / 2, 0, 0]} position={[-2, -2, 0]}>\n      <planeBufferGeometry args={[100, 100, 1]} />\n      <meshStandardMaterial color=\"white\" />\n    </mesh>\n  );\n};\n\nconst TV = () => {\n  const { nodes } = useGLTF('tv.gltf')\n  return (\n    <group rotation={[Math.PI / 8, Math.PI * 1.2, 0]}>\n      <mesh geometry={nodes.TV.geometry}>\n        <meshStandardMaterial color=\"white\" />\n      </mesh>\n    </group>\n  )\n}\n\nexport default function App() {\n  return (\n    <Canvas>\n      <fog attach=\"fog\" args={[\"black\", 1, 7]} />\n      <OrbitControls maxPolarAngle={Math.PI / 2} minPolarAngle={0} />\n      <directionalLight intensity={0.5} />\n      <Suspense fallback={null}>\n        <TV />\n      </Suspense>\n      <Floor />\n    </Canvas>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}