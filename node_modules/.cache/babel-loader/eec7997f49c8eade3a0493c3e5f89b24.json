{"ast":null,"code":"import _slicedToArray from \"/Users/yungdae/Documents/Actualize/soundtest-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/yungdae/Documents/Actualize/soundtest-react/src/App.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, Suspense, useState } from \"react\";\nimport { Canvas, useFrame, extend } from \"react-three-fiber\";\nimport { OrbitControls, useGLTF, Effects } from \"drei\";\nimport * as THREE from \"three\";\nimport { Box } from \"@react-three/drei/shapes\";\nimport \"./styles.css\";\nimport url from \"./electricity.mp4\";\nimport { MeshStandardMaterial } from \"three\";\nimport { BloomPass } from \"three/examples/jsm/postprocessing/BloomPass\";\nimport { GlitchPass } from \"three/examples/jsm/postprocessing/GlitchPass\";\nimport { WaterPass } from \"./WaterPass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nextend({\n  BloomPass: BloomPass,\n  GlitchPass: GlitchPass,\n  WaterPass: WaterPass\n});\n\nvar Floor = function Floor() {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [-2, -2, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n      args: [100, 100, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Floor;\n\nvar TV = function TV() {\n  _s();\n\n  var _useGLTF = useGLTF('tv.gltf'),\n      nodes = _useGLTF.nodes;\n\n  var _useState = useState(function () {\n    var vid = document.createElement(\"video\");\n    vid.src = url;\n    vid.crossOrigin = \"Anonymous\";\n    vid.loop = true;\n    vid.muted = true;\n    vid.play();\n    return vid;\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      video = _useState2[0];\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    rotation: [Math.PI / 8, Math.PI * 1.2, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.TV.geometry,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, 0],\n      position: [0, 0, 1.1],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [3.2, 1.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        emissive: \"white\",\n        side: THREE.DoubleSide,\n        children: [/*#__PURE__*/_jsxDEV(\"videoTexture\", {\n          attach: \"map\",\n          args: [video]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"videoTexture\", {\n          attach: \"emissiveMap\",\n          args: [video]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TV, \"umIwWjqrceccJQ86a4u28De6XbM=\", false, function () {\n  return [useGLTF];\n});\n\n_c2 = TV;\n\nvar EV = function EV() {\n  _s2();\n\n  var _useGLTF2 = useGLTF('tv.gltf'),\n      nodes = _useGLTF2.nodes;\n\n  var _useState3 = useState(function () {\n    var vid = document.createElement(\"video\");\n    vid.src = url;\n    vid.crossOrigin = \"Anonymous\";\n    vid.loop = true;\n    vid.muted = true;\n    vid.play();\n    return vid;\n  }),\n      _useState4 = _slicedToArray(_useState3, 1),\n      video = _useState4[0];\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    rotation: [Math.PI / 4, Math.PI * 1.5, 4],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.TV.geometry,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 90, 0],\n      position: [1, 1, 1.1],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [3.2, 1.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        emissive: \"white\",\n        side: THREE.DoubleSide,\n        children: [/*#__PURE__*/_jsxDEV(\"videoTexture\", {\n          attach: \"map\",\n          args: [video]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"videoTexture\", {\n          attach: \"emissiveMap\",\n          args: [video]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(EV, \"umIwWjqrceccJQ86a4u28De6XbM=\", false, function () {\n  return [useGLTF];\n});\n\n_c3 = EV;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(Effects, {\n      children: [/*#__PURE__*/_jsxDEV(\"waterPass\", {\n        attachArray: \"passes\",\n        factor: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"bloomPass\", {\n        attachArray: \"passes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"glitchPass\", {\n        attachArray: \"passes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fog\", {\n      attach: \"fog\",\n      args: [\"black\", 1, 7]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      maxPolarAngle: Math.PI / 2,\n      minPolarAngle: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      intensity: 0.05\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      intensity: 0.2,\n      position: [1, 5, 0],\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(TV, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EV, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Floor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_c4 = App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Floor\");\n$RefreshReg$(_c2, \"TV\");\n$RefreshReg$(_c3, \"EV\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/yungdae/Documents/Actualize/soundtest-react/src/App.js"],"names":["React","useRef","Suspense","useState","Canvas","useFrame","extend","OrbitControls","useGLTF","Effects","THREE","Box","url","MeshStandardMaterial","BloomPass","GlitchPass","WaterPass","Floor","Math","PI","TV","nodes","vid","document","createElement","src","crossOrigin","loop","muted","play","video","geometry","DoubleSide","EV","App"],"mappings":"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","sourcesContent":["import React, { useRef, Suspense, useState } from \"react\";\nimport { Canvas, useFrame, extend } from \"react-three-fiber\";\nimport { OrbitControls, useGLTF, Effects } from \"drei\";\nimport * as THREE from \"three\";\nimport { Box } from \"@react-three/drei/shapes\";\nimport \"./styles.css\";\nimport url from \"./electricity.mp4\"\nimport { MeshStandardMaterial } from \"three\";\nimport { BloomPass } from \"three/examples/jsm/postprocessing/BloomPass\"\nimport { GlitchPass } from \"three/examples/jsm/postprocessing/GlitchPass\"\nimport { WaterPass } from \"./WaterPass\"\n\nextend({ BloomPass, GlitchPass, WaterPass })\n\n\nconst Floor = () => {\n  return (\n    <mesh rotation={[-Math.PI / 2, 0, 0]} position={[-2, -2, 0]}>\n      <planeBufferGeometry args={[100, 100, 1]} />\n      <meshStandardMaterial color=\"white\" />\n    </mesh>\n  );\n};\n\nconst TV = () => {\n  const { nodes } = useGLTF('tv.gltf')\n\n  const [video] = useState(() => {\n    const vid = document.createElement(\"video\");\n    vid.src = url;\n    vid.crossOrigin = \"Anonymous\";\n    vid.loop = true;\n    vid.muted = true;\n    vid.play();\n    return vid\n  });\n\n  return (\n    <group rotation={[Math.PI / 8, Math.PI * 1.2, 0]}>\n      <mesh geometry={nodes.TV.geometry}>\n        <meshStandardMaterial color=\"white\" />\n      </mesh>\n      <mesh rotation={[0, 0, 0]} position={[0, 0, 1.1]}>\n        <planeGeometry args={[3.2, 1.9]} />\n        <meshStandardMaterial emissive={\"white\"} side={THREE.DoubleSide}>\n          <videoTexture attach=\"map\" args={[video]} />\n          <videoTexture attach=\"emissiveMap\" args={[video]} />\n        </meshStandardMaterial>\n      </mesh>\n    </group>\n  )\n}\n\nconst EV = () => {\n  const { nodes } = useGLTF('tv.gltf')\n\n  const [video] = useState(() => {\n    const vid = document.createElement(\"video\");\n    vid.src = url;\n    vid.crossOrigin = \"Anonymous\";\n    vid.loop = true;\n    vid.muted = true;\n    vid.play();\n    return vid\n  });\n\n  return (\n    <group rotation={[Math.PI / 4, Math.PI * 1.5, 4]}>\n      <mesh geometry={nodes.TV.geometry}>\n        <meshStandardMaterial color=\"white\" />\n      </mesh>\n      <mesh rotation={[0, 90, 0]} position={[1, 1, 1.1]}>\n        <planeGeometry args={[3.2, 1.9]} />\n        <meshStandardMaterial emissive={\"white\"} side={THREE.DoubleSide}>\n          <videoTexture attach=\"map\" args={[video]} />\n          <videoTexture attach=\"emissiveMap\" args={[video]} />\n        </meshStandardMaterial>\n      </mesh>\n    </group>\n  )\n}\n\nexport default function App() {\n  return (\n    <Canvas>\n      <Effects>\n        <waterPass attachArray=\"passes\" factor={1} />\n        <bloomPass attachArray=\"passes\" />\n        <glitchPass attachArray=\"passes\" />\n      </Effects>\n      <fog attach=\"fog\" args={[\"black\", 1, 7]} />\n      <OrbitControls maxPolarAngle={Math.PI / 2} minPolarAngle={0} />\n      <directionalLight intensity={0.05} />\n      <pointLight intensity={0.2} position={[1, 5, 0]} color=\"blue\" />\n      <Suspense fallback={null}>\n        <TV />\n        <EV />\n      </Suspense>\n      <Floor />\n    </Canvas>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}